<?xml version="1.0" encoding="UTF-8"?>
<VSModel name="AIMWS_Test" version="5">

<meta>
   <create author="admin" buildNumber="7.1.0.611" date="08/03/2015" host="stl3ctxxa21" version="7.1"/>
   <lastEdited author="e057908" buildNumber="8.1.0.843" date="12/28/2015" host="GH-DTBLQ32" version="8.1.0"/>
</meta>

<id>B8DF38F739A211E589010050568C4880</id>
<IsInProject>true</IsInProject>
<sig>ZWQ9NSZ0Y3Y9NSZsaXNhdj04LjEuMCAoOC4xLjAuODQzKSZub2Rlcz0xNTc1Mzg2MTgx</sig>
<subprocess>false</subprocess>

<initState>
</initState>

<resultState>
</resultState>

<deletedProps>
</deletedProps>

    <Node log="" name="HTTP/S Listen" next="VS Image Response Selection" quiet="true" think="0" type="com.itko.lisa.vse.stateful.protocol.http.HttpListenStep" uid="null" useFilters="true" version="1"> 


      <!-- Filters -->
      <Filter type="com.itko.lisa.vse.stateful.common.DataProtocolFilter">
        <valueToFilterKey>lisa.HTTP/S Listen.rsp</valueToFilterKey>
<dataProtocol>com.itko.lisa.vse.stateful.common.datahandler.XMLPayloadParserDataProtocolHandler</dataProtocol>
<processRequests>true</processRequests>
<processResponses>false</processResponses>
<CustomFilterData>
<source set="request_body"/><actions>
<action set="operation">
<query>local-name(//*[local-name()='Body']/*[1])</query>
<map>
</map>
</action>
<action name="selfRegisterRequest_userAlias" set="argument">
<query>//*[local-name()='selfRegisterRequest']/*[local-name()='userAlias']/text()</query>
<map>
</map>
</action>
<action name="getSecurityQuestionsRequest_userId" set="argument">
<query>//*[local-name()='getSecurityQuestionsRequest']/*[local-name()='userId']/text()</query>
<map>
</map>
</action>
<action name="getUserRolesRequest_userId" set="argument">
<query>//*[local-name()='getUserRolesRequest']/*[local-name()='userId']/text()</query>
<map>
</map>
</action>
<action name="createUserRequest_userAlias" set="argument">
<query>//*[local-name()='createUserRequest']/*[local-name()='userAlias']/text()</query>
<map>
</map>
</action>
<action name="suspendUserRequest_userId" set="argument">
<query>//*[local-name()='suspendUserRequest']/*[local-name()='userId']/text()</query>
<map>
</map>
</action>
<action name="restoreUserRequest_userId" set="argument">
<query>//*[local-name()='restoreUserRequest']/*[local-name()='userId']/text()</query>
<map>
</map>
</action>
<action name="authenticatePasswordRequest_userId" set="argument">
<query>//*[local-name()='authenticatePasswordRequest']/*[local-name()='userCredentials']/*[local-name()='userId']/text()</query>
<map>
</map>
</action>
<action name="addUserToRoleRequest_userId" set="argument">
<query>//*[local-name()='addUserToRoleRequest']/*[local-name()='userId']/text()</query>
<map>
</map>
</action>
<action name="modifyUserRequest_userId" set="argument">
<query>//*[local-name()='modifyUserRequest']/*[local-name()='userId']/text()</query>
<map>
</map>
</action>
<action name="searchUserRequest_userAlias" set="argument">
<query>//*[local-name()='searchUserRequest']/*[local-name()='userAlias']/text()</query>
<map>
</map>
</action>
<action name="deleteUserRequest_userId" set="argument">
<query>//*[local-name()='deleteUserRequest']/*[local-name()='userId']/text()</query>
<map>
</map>
</action>
</actions>
</CustomFilterData>
      </Filter>


      <!-- Data Sets -->
<readrec>UserID</readrec>

      <!-- Assertions -->
<CheckResult assertTrue="true" name="If being efficient" type="com.itko.lisa.vse.stateful.AssertOnExecutionMode">
<log>Current execution mode is Most Efficient, branching to VS Image Response Selection</log>
<then>VS Image Response Selection</then>
<valueToAssertKey/>
        <executionMode>EFFICIENT</executionMode>
</CheckResult>

<outputAsObject>true</outputAsObject>
<onExceptionStep>abort</onExceptionStep>
<listenPort>{{PORT}}</listenPort>
<basePath>{{BASEPATH}}</basePath>
<bindOnly>false</bindOnly>
<useSSL>false</useSSL>
    </Node>


    <Node log="" name="VS Image Response Selection" next="HTTP/S Respond" quiet="true" think="0" type="com.itko.lisa.vse.stateful.ConversationalStep" uid="null" useFilters="true" version="1"> 


      <!-- Assertions -->
<CheckResult assertTrue="true" name="If tracking" type="com.itko.lisa.vse.stateful.AssertOnExecutionMode">
<log>Current execution mode is Transaction Tracking, branching to Virtual Service Tracking</log>
<then>HTTP/S Respond</then>
<valueToAssertKey/>
        <executionMode>TRACK</executionMode>
</CheckResult>

<vsiSource>{{LISA_RELATIVE_PROJ_ROOT}}/VServices/Images/AIMWS.vsi</vsiSource>
<requestPropertyName>lisa.vse.request</requestPropertyName>
<outputAsObject>true</outputAsObject>
<onExceptionStep>abort</onExceptionStep>
    </Node>


    <Node log="" name="HTTP/S Respond" next="HTTP/S Listen" quiet="false" think="0" type="com.itko.lisa.vse.stateful.protocol.http.HttpRespondStep" uid="null" useFilters="true" version="1"> 

<responseList>lisa.vse.response</responseList>
<onExceptionStep>abort</onExceptionStep>
    </Node>


    <Node log="The test was aborted" name="abort" next="fail" quiet="true" think="0h" type="com.itko.lisa.test.AbortStep" uid="B8DF38FD39A211E589010050568C4880" useFilters="true" version="1"> 

    </Node>


    <Node log="" name="fail" next="fail" quiet="true" think="0h" type="com.itko.lisa.test.Abend" uid="B8DF38FB39A211E589010050568C4880" useFilters="true" version="1"> 

    </Node>


    <Node log="" name="end" next="fail" quiet="true" think="0h" type="com.itko.lisa.test.NormalEnd" uid="B8DF38F939A211E589010050568C4880" useFilters="true" version="1"> 

    </Node>


    <DataSet atend="" local="false" maxItemsToFetch="100" name="UserID" random="false" type="com.itko.lisa.test.DataSetRandIDGenerator">
<sample>rO0ABXNyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAB3CAAAAAEAAAABdAAGVXNlcklEdAAkNzIxNTI0NjUyOTM1NTA2MDE4MDY3NDI2NjU2MDYzNDM0ODIyeA==</sample>
<type>Number</type>
<length>36</length>
<prefix/>
    </DataSet>

</VSModel>